{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andrea.sisneros\\\\React Projects\\\\comic-closet-typescript\\\\my-app\\\\src\\\\routes\\\\Home.tsx\",\n  _s = $RefreshSig$();\nimport TextBox from \"../components/TextBox/TextBox\";\nimport FilterBar from \"../components/FilterBar/FilterBar\";\nimport ComicCard from \"../components/ComicCard/ComicCard\";\nimport { useState } from \"react\";\nimport { fetchComics } from \"../utils/utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IMG_FANTASTIC = \"portrait_fantastic\";\n;\n\n// interface characters {\n//   id: number;\n//   name: string;\n//   thumbnail: any;\n// }\n\n// interface creators {\n//   id: number;\n//   items: any;\n//   name: string;\n//   title: string;\n//   issuseNumber: number;\n//   creators: object;\n//   thumbnail: any;\n//   fullname: string;\n// }\n\nexport default function Home() {\n  _s();\n  const [comics, setComics] = useState([]);\n  const [error, setError] = useState();\n  let cards;\n  const handleClick = async (e, args) => {\n    e.preventDefault();\n    if (args === \"\") return;\n    try {\n      return await fetchComics();\n    } catch (err) {\n      return err;\n    }\n  };\n\n  // if (comics) {\n  //   cards = comics.map((comic: any) => (\n  //     <ComicCard\n  //       title={comic.title}\n  //       key={comic.id}\n  //       id={comic.id}\n  //       issueNumber={comic.issueNumber}\n  //       creators={comic.creators.items.map((creator: any) => {\n  //         return <ul key={creator.id}>{creator.name}</ul>\n  //       })}\n  //       thumbnail={`${comic.thumbnail.path}/${IMG_FANTASTIC}.${comic.thumbnail.extension}`}\n  //       />\n  //       ));\n  //  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TextBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FilterBar, {\n      handleClick: handleClick,\n      setComics: setComics,\n      setError: setError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: comics.map(comic => /*#__PURE__*/_jsxDEV(ComicCard, {\n        title: comic.title,\n        id: comic.id,\n        issueNumber: comic.issueNumber,\n        creators: comic.creators.items.map(creator => {\n          return creator.name;\n        }),\n        thumbnail: `${comic.thumbnail.path}/${IMG_FANTASTIC}.${comic.thumbnail.extension}`\n      }, comic.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"LQgVcnSvtjrexMpcnJm96vB8Ljg=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["TextBox","FilterBar","ComicCard","useState","fetchComics","IMG_FANTASTIC","Home","comics","setComics","error","setError","cards","handleClick","e","args","preventDefault","err","map","comic","title","id","issueNumber","creators","items","creator","name","thumbnail","path","extension"],"sources":["C:/Users/andrea.sisneros/React Projects/comic-closet-typescript/my-app/src/routes/Home.tsx"],"sourcesContent":["import TextBox from \"../components/TextBox/TextBox\";\r\nimport FilterBar from \"../components/FilterBar/FilterBar\";\r\nimport Dropdown from \"../components/Dropdown/Dropdown\";\r\nimport ComicCard from \"../components/ComicCard/ComicCard\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport { fetchComics } from \"../utils/utils\";\r\nconst IMG_FANTASTIC = \"portrait_fantastic\";\r\n\r\n\r\n\r\ninterface comics {\r\n  id: number;\r\n  title: string;\r\n  issuseNumber: number;\r\n  creators: object;\r\n  characters: object;\r\n  name: string;\r\n  thumbnail: any;\r\n  items: any;\r\n};\r\n\r\n// interface characters {\r\n//   id: number;\r\n//   name: string;\r\n//   thumbnail: any;\r\n// }\r\n\r\n// interface creators {\r\n//   id: number;\r\n//   items: any;\r\n//   name: string;\r\n//   title: string;\r\n//   issuseNumber: number;\r\n//   creators: object;\r\n//   thumbnail: any;\r\n//   fullname: string;\r\n// }\r\n\r\n\r\nexport default function Home() {\r\n    const [comics, setComics] = useState<comics[]>([]);\r\n    const [error, setError] = useState();\r\n  \r\n    let cards: any;\r\n\r\n    const handleClick = async (e: any, args:any) => {\r\n      e.preventDefault();\r\n      if (args === \"\") return;\r\n  \r\n      try {\r\n        return await fetchComics();\r\n      } catch (err) {\r\n        return err;\r\n      }\r\n    };\r\n  \r\n    // if (comics) {\r\n    //   cards = comics.map((comic: any) => (\r\n    //     <ComicCard\r\n    //       title={comic.title}\r\n    //       key={comic.id}\r\n    //       id={comic.id}\r\n    //       issueNumber={comic.issueNumber}\r\n    //       creators={comic.creators.items.map((creator: any) => {\r\n    //         return <ul key={creator.id}>{creator.name}</ul>\r\n    //       })}\r\n    //       thumbnail={`${comic.thumbnail.path}/${IMG_FANTASTIC}.${comic.thumbnail.extension}`}\r\n    //       />\r\n    //       ));\r\n    //  }\r\n\r\n  return (\r\n    <div>\r\n        <TextBox />\r\n        {/* {comics.map((comic: any) => (\r\n            <FilterBar\r\n              characters={comic.characters.items.map((character: any) => {\r\n                return character.name;\r\n              })}\r\n              />\r\n          ))} */}\r\n          <FilterBar handleClick={handleClick} setComics={setComics} setError={setError} /> \r\n        <div className=\"container\">\r\n          {/* {cards ? cards : null} */}\r\n          {comics.map((comic: any) => (\r\n            <ComicCard\r\n              title={comic.title}\r\n              key={comic.id}\r\n              id={comic.id}\r\n              issueNumber={comic.issueNumber}\r\n              creators={comic.creators.items.map((creator: any) => {\r\n                return creator.name;\r\n              })}\r\n              thumbnail={`${comic.thumbnail.path}/${IMG_FANTASTIC}.${comic.thumbnail.extension}`}\r\n              />\r\n          ))}\r\n        </div>\r\n        <div>\r\n    </div>\r\n    </div>\r\n  );\r\n}"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,+BAA+B;AACnD,OAAOC,SAAS,MAAM,mCAAmC;AAEzD,OAAOC,SAAS,MAAM,mCAAmC;AACzD,SAASC,QAAQ,QAAmB,OAAO;AAE3C,SAASC,WAAW,QAAQ,gBAAgB;AAAC;AAC7C,MAAMC,aAAa,GAAG,oBAAoB;AAazC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,eAAe,SAASC,IAAI,GAAG;EAAA;EAC3B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAAW,EAAE,CAAC;EAClD,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,EAAE;EAEpC,IAAIQ,KAAU;EAEd,MAAMC,WAAW,GAAG,OAAOC,CAAM,EAAEC,IAAQ,KAAK;IAC9CD,CAAC,CAACE,cAAc,EAAE;IAClB,IAAID,IAAI,KAAK,EAAE,EAAE;IAEjB,IAAI;MACF,OAAO,MAAMV,WAAW,EAAE;IAC5B,CAAC,CAAC,OAAOY,GAAG,EAAE;MACZ,OAAOA,GAAG;IACZ;EACF,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEF,oBACE;IAAA,wBACI,QAAC,OAAO;MAAA;MAAA;MAAA;IAAA,QAAG,eAQT,QAAC,SAAS;MAAC,WAAW,EAAEJ,WAAY;MAAC,SAAS,EAAEJ,SAAU;MAAC,QAAQ,EAAEE;IAAS;MAAA;MAAA;MAAA;IAAA,QAAG,eACnF;MAAK,SAAS,EAAC,WAAW;MAAA,UAEvBH,MAAM,CAACU,GAAG,CAAEC,KAAU,iBACrB,QAAC,SAAS;QACR,KAAK,EAAEA,KAAK,CAACC,KAAM;QAEnB,EAAE,EAAED,KAAK,CAACE,EAAG;QACb,WAAW,EAAEF,KAAK,CAACG,WAAY;QAC/B,QAAQ,EAAEH,KAAK,CAACI,QAAQ,CAACC,KAAK,CAACN,GAAG,CAAEO,OAAY,IAAK;UACnD,OAAOA,OAAO,CAACC,IAAI;QACrB,CAAC,CAAE;QACH,SAAS,EAAG,GAAEP,KAAK,CAACQ,SAAS,CAACC,IAAK,IAAGtB,aAAc,IAAGa,KAAK,CAACQ,SAAS,CAACE,SAAU;MAAE,GAN9EV,KAAK,CAACE,EAAE;QAAA;QAAA;QAAA;MAAA,QAQhB;IAAC;MAAA;MAAA;MAAA;IAAA,QACE,eACN;MAAA;MAAA;MAAA;IAAA,QACE;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AAEV;AAAC,GA9DuBd,IAAI;AAAA,KAAJA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}